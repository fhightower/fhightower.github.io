<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Math on Floyd Hightower</title><link>https://hightower.space/tags/math/</link><description>Recent content in Math on Floyd Hightower</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 10 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hightower.space/tags/math/index.xml" rel="self" type="application/rss+xml"/><item><title>Conjecture on n-sided Numbers and Their Sums</title><link>https://hightower.space/posts/conjecture-on-n-sided-numbers/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><guid>https://hightower.space/posts/conjecture-on-n-sided-numbers/</guid><description>While reading The Most Beautiful Mathematical Formulas: An Entertaining Look at the Most Insightful, Useful, and Quirky Theorems of All Time, I came across Lagrange&amp;rsquo;s four-square theorem:
We can represent every natural number as the sum of, at most, four squares.
For example, we can represent 27 as:
16 + 9 + 1 + 1 or
4^2 + 3^3 + 1^2 + 1^2 As I was reading about this, I came up with the following conjecture.</description></item><item><title>Logic Operations</title><link>https://hightower.space/posts/logic_operations/</link><pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate><guid>https://hightower.space/posts/logic_operations/</guid><description/></item><item><title>Collatz Conjecture Playground</title><link>https://hightower.space/posts/collatz-conjecture/</link><pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate><guid>https://hightower.space/posts/collatz-conjecture/</guid><description>Starting value: 10.00
Found solution in: 6.00 steps
1.02.03.04.05.06.051015xy0101521638445261Loading... This was written using the Idyll markup language for creating interactive documents. The Idyll code to create this page is:
Starting value: [var name:&amp;quot;number&amp;quot; value:10 /] [Range value:number min:1 max:100 /] [Display value:number /] [var name:&amp;quot;createJson&amp;quot; value:`function(max, step, number) { var data = []; function iterate(max, step, number) { var newNumber; if (number % 2 === 0) { newNumber = number / 2; } else { newNumber = 3*number + 1; } if (newNumber !</description></item></channel></rss>