# Page Monitor

[Aside]
  *What we see depends mainly on what we look for.*
  *- John Lubbock*
[/Aside]

A simple webpage monitor that sends an email if website's content changes.

## Algorithm

The algorithm for this project is:

### 1. Request a site:

[var name:getURL value:`function requestURL(incomingURL) {
    console.log('url: ', incomingURL);
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", incomingURL, false);
    xmlHttp.send( null );
    console.log('xmlHttp: ', xmlHttp);
    return xmlHttp.responseText;
}` /]

[var name:"url" value:"https://hightower.space/projects/" /]
Enter a URL: [TextInput value:url /]
[var name:urlContent value:'' /]
[button onClick:`urlContent += getURL(url)`]Request URL[/button]

### 2. Get the hash of the site:

[md5Hasher value:`urlContent` /]

### 3. Check the hash against the existing data:

Let's pretend the previous hash of the content at [Display value:url /] was:

[var name:exampleOldHash value:'abcdef198f00b204e9800998ecf8427e' /]
[Display value:exampleOldHash /]

### 4. Take Action

If the new hash of the URL content is different, an alert will be sent to the email address passed into the script and the new hash will be recorded. In our example, the new hash ([md5Hasher value:`urlContent` /]) is different from the old hash ([Display value:exampleOldHash /]) so an alert would be sent.

If the hash of a URL's content is the same as it was the last time the script was run, nothing will be updated.

## Usage

```
usage: page_monitor.py \[-h\] email_address email_account_password

Monitor a webpage for changes to its content and send alerts if there are any
changes.

positional arguments:

  - email_address  an email address from which I can send updates if a
                        webpage changes

  - email_account_password  the password for the email address so that I can send notifications if a webpage changes

optional arguments:
  
  - -h, --help  show this help message and exit
```
